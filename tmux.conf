# iTerm Shortcuts for my convenience
# New pane, next pane, previous pane
# ⌘ ⇧ N   -> 0x02 0x63 (⌃b c)
# ⌘ ⇧ ]   -> 0x02 0x6E (⌃b n)
# ⌘ ⇧ [   -> 0x02 0x70 (⌃b p)
# Same, but for Nested session:
# ⌘ ⌥ ⇧ N -> 0x02 0x62 0x63 (⌃b b c)
# ⌘ ⌥ ⇧ ] -> 0x02 0x62 0x6E (⌃b b n)
# ⌘ ⌥ ⇧ [ -> 0x02 0x62 0x70 (⌃b b p)

set-option -g default-terminal "screen-256color"
set-option -sa terminal-overrides ',xterm-256color:Tc'
set-option -g focus-events on

setw -g aggressive-resize off

# 2.1 broke my iTerm shortcuts
set -g assume-paste-time 0

# This just makes sense (i.e zero is way on the right)
set -g base-index 1

# History
set -g history-limit 10000

# Don't have to take pinky off of control to get to copy mode
bind-key C-[ copy-mode

# Don't wait for escape time with C-[ above
set -s escape-time 0

# Vi
set -g status-keys vi
setw -g mode-keys vi

# vim movement
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

bind J resize-pane -D 10
bind K resize-pane -U 10
bind L resize-pane -R 20
bind H resize-pane -L 20

# Open new panes with current dir
bind c new-window -c "#{pane_current_path}"
bind _ split-window -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"

bind-key C-b last-window

bind-key b send-prefix

# refresh with r
unbind r
bind r source-file ~/.tmux.conf

# Automatically set window title
setw -g automatic-rename on

# Status Bar
set -g status-style bg=black,fg=white
set -g message-style bg=white,fg=black
set -g window-status-current-style bg=blue,fg=black

set -g status-right ""

