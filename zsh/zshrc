# [Font](https://github.com/ryanoasis/nerd-fonts)
case `uname` in
  Linux)
    is_linux=true;;
  Darwin)
    is_mac=true;;
  *)
    platform='unknown';;
esac

autoload -U colors && colors

set -o vi

###################
# Shell Variables #

# Prepend to $PATH
path_pre=(
  "${HOME}/.rbenv/shims"
  "${HOME}/.pyenv/shims"
  "${HOME}/.nix-profile/bin"
  "${HOME}/.rvm/bin"
  "${HOME}/.cargo/bin"
  "${HOME}/bin"
  "${HOME}/.local/bin"
  "/opt/homebrew/bin"
  '/usr/local/bin'
  '/usr/local/sbin'
  "${HOME}/.krew/bin"
  "${HOME}/.fzf/bin"
)

pre_tmp=()
for p in "${path_pre[@]}"; do [ -d "$p" ] && pre_tmp+="$p"; done
PATH="${(j.:.)pre_tmp}:$PATH"
unset path_pre pre_tmp

# Localization
LANG='en_US.UTF-8'
LC_ALL='en_US.UTF-8'
export PYTHONIOENCODING=utf-8

# History
HISTFILE=~/.zsh_history
SAVEHIST=10000
setopt HIST_IGNORE_DUPS

# Prefer nvim
nv="$(which nvim)"
if [ $? -eq 0 ]; then
  alias vi="$nv"
  alias vim="$nv"
  alias vimdiff="$nv -d"
  export EDITOR="$nv"
else
  export EDITOR="$(which vim)"
fi
unset nv

# Env Vars
export PAGER="/usr/bin/less -Rs"
export VISUAL="$EDITOR"
export LESSEDIT="$EDITOR"
export LESSCHARSET='utf-8'
export LESS='--ignore-case -R'

#########
# Alias #
if [ $is_mac ]; then
  alias ls='ls -G'
else
  alias ls='ls --color=auto --time-style=long-iso'
fi

alias  l='ls -lF'
alias la='l -A'
alias lh='l -h'

alias mp='mkdir -p'

alias   ..='cd ..'
alias  ...='cd ../..'
alias ....='cd ../../..'

alias cl='clear'

alias add_cwd_to_path='export PATH=`pwd`:$PATH'

# Kubernetes
alias kc=kubectl
alias kx=kubectx
alias kn=kubens

##############
# Completion #
autoload -U compinit && compinit
# Case insensitive completion
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*'
zstyle ':completion:*' completer _complete
zstyle ':completion:*' group-name ''
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' use-compctl false

if [ -f ~/.ssh/known_hosts ]; then
  local knownhosts
  knownhosts=( ${${${${(f)"$(<$HOME/.ssh/known_hosts)"}:#[0-9]*}%%\ *}%%,*} )
  zstyle ':completion:*:(ssh|scp|sftp):*' hosts $knownhosts
fi

hfunc=~/.zsh/func
[ -d $hfunc ] && fpath+=$hfunc

ufunc=/usr/local/share/zsh/site-functions
[ -d $ufunc ] && fpath+=$ufunc
unset hfunc ufunc

# Attach unattached tmux session or create a new one
function tt () {
  if $(tmux list-sessions | grep -v '\(attached\)' > /dev/null); then
    tmux -u attach $@
  else
    tmux -u $@
  fi
}

#############
# Functions #

# Man in Preview
# https://news.ycombinator.com/item?id=25308708
if [ $is_mac ]; then
  pman() { man -t "$@" | open -f -a Preview; }
fi

# Simple check for a command in $PATH
exists_in_path() {
  which -s $1 > /dev/null
}

################
# App Specific #

# https://github.com/junegunn/fzf
test -f "${HOME}/.fzf.zsh" && source "$_"

# https://starship.rs
exists_in_path starship && eval "$(starship init zsh)"

# https://github.com/ajeetdsouza/zoxide/
exists_in_path zoxide && eval "$(zoxide init zsh)"

# https://crates.io/crates/sccache
exists_in_path sccache && export RUSTC_WRAPPER=sccache

# https://direnv.net/
exists_in_path direnv && eval "$(direnv hook zsh)"

# https://github.com/rbenv/rbenv
exists_in_path rbenv && eval "$(rbenv init - zsh)"

# https://github.com/pyenv/pyenv
exists_in_path pyenv && eval "$(pyenv init - zsh)"

[ -f ~/.config/ripgrep/conf ] && export RIPGREP_CONFIG_PATH=~/.config/ripgrep/conf

## Machine specific zshrc
test -f ~/.zshrc.local && source "$_"

test -s "$HOME/.rvm/scripts/rvm" && source "$_" # Load RVM into a shell session *as a function*

# Remove dupes
typeset -U path
typeset -U fpath
